g(x) = x^3 - x + 4

alg newton_iter(r, f, fp)
{
	# println("f(r) = ", f(r))
	# println("fp = ", fp)
	# println("fp(r) = ", fp(r))
	return r - f(r)/fp(r)
}

alg newton(r, f)
{
	less = null
	more = null

	y = f(r)

	println("y = ", y)
	println("g(1) = ", g(1))

	if (y > 0)
		more = r
	else
		less = r
	
	println("more = ", more)
	println("less = ", less)

	i = 0
	while ((more == null) || (less == null)) {
		println("\tLOOP")
		
		if ((++i) == 5)
			break
	}
}

newton(1, g)

i = 0
x = 1
while (i++ < 10) {
	println("newton iter: ", x)

	x = newton_iter(x, g, g.derivative())
}

# alg returner() {
#	return 10
# }
#
# println("returner = ", returner())

# Fix the output of this
# println("returner = ", returner)

# TODO: fix parsing...
# i = 0
# while (true) {
#	println("LOOP, i = ", i)
#
#	if (i == 5) {
#		println("\tI == 5!!")
#		
#		break
#	}
#		
#	i++
# }