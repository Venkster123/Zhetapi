g(x) = x^2 - 4

alg newton_iter(r, f, fp)
{
	return r - f(r)/fp(r)
}

alg newton(r, f)
{
	# Get the derivative
	fp = f.derivative()

	println("FP = ", fp)

	less = null
	more = null

	y = f(r)

	# TODO: Yp caching is not working figure out why
	# TODO: Also cannot put commas in comments
	# yp = fp(r)

	println("Y = ", y, " X = ", r)

	if (y > 0)
		more = r
	else
		less = r
	
	println("more = ", more)
	println("less = ", less)

	x = r

	i = 0
	while ((more == null) || (less == null)) {
		println("ITERATION:")
		if ((++i) == 5)
			break

		# Make sure that arguments are immutable unless allowed to ref
		x = newton_iter(x, f, fp)

		# TODO: need to show error when (condition) after else

		y = f(x)
		println("Y = ", y, " X = ", x)
		if ((y > 0) && (more == null))
			more = x
		elif ((y < 0) && (less == null))
			less = x
		
		println("\tmore = ", more)
		println("\tless = ", less)
	}

	# TODO: try adding static variables
	eps = 1e-20

	println("MAIN LOOP, eps = ", eps)
	println("\tnex = ", newton_iter(x, f, fp))

	i = 0
	while (++i < 100) {
		println("=======================================")
		x = newton_iter(x, f, fp)

		println("PRE-Root: ", x)
		println("\tvalue = ", f(x))

		y = f(x)
		if (x > more) {
			println("OVERBOARD!")
			x = (more + less)/2

			y = f(x)
			if (y < 0)
				less = x
			else
				more = x
		} elif (x < less) {
			println("UNDERBOARD!")
			x = (more + less)/2

			y = f(x)
			if (y < 0)
				less = x
			else
				more = x
		}

		println("Root: ", x)
		println("\tvalue = ", f(x))

		# TODO: error handling for "if ()"

		# Check abs
		if (abs(y) < eps)
			break
		
		# Update more and less each iteration
		println("\tmore = ", more)
		println("\tless = ", less)
	}
}

newton(1, g)